// Code generated by protoc-gen-go.
// source: task_state.proto
// DO NOT EDIT!

/*
Package funnel is a generated protocol buffer package.

It is generated from these files:
	task_state.proto
	workers.proto

It has these top-level messages:
	UpdateTaskRequest
	UpdateTaskResponse
	WorkerResources
	Worker
	ListWorkersRequest
	ListWorkersResponse
	GetWorkerRequest
*/
package funnel

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import tes "github.com/ohsu-comp-bio/funnel/proto/tes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpdateTaskRequest struct {
	Id    string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	State tes.State `protobuf:"varint,2,opt,name=state,enum=tes.State" json:"state,omitempty"`
	// TODO which task log entry? Last?
	TaskLog       *tes.TaskLog     `protobuf:"bytes,3,opt,name=task_log,json=taskLog" json:"task_log,omitempty"`
	ExecutorIndex int64            `protobuf:"varint,7,opt,name=executor_index,json=executorIndex" json:"executor_index,omitempty"`
	ExecutorLog   *tes.ExecutorLog `protobuf:"bytes,8,opt,name=executor_log,json=executorLog" json:"executor_log,omitempty"`
}

func (m *UpdateTaskRequest) Reset()                    { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()               {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UpdateTaskRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateTaskRequest) GetState() tes.State {
	if m != nil {
		return m.State
	}
	return tes.State_UNKNOWN
}

func (m *UpdateTaskRequest) GetTaskLog() *tes.TaskLog {
	if m != nil {
		return m.TaskLog
	}
	return nil
}

func (m *UpdateTaskRequest) GetExecutorIndex() int64 {
	if m != nil {
		return m.ExecutorIndex
	}
	return 0
}

func (m *UpdateTaskRequest) GetExecutorLog() *tes.ExecutorLog {
	if m != nil {
		return m.ExecutorLog
	}
	return nil
}

type UpdateTaskResponse struct {
}

func (m *UpdateTaskResponse) Reset()                    { *m = UpdateTaskResponse{} }
func (m *UpdateTaskResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateTaskResponse) ProtoMessage()               {}
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*UpdateTaskRequest)(nil), "funnel.UpdateTaskRequest")
	proto.RegisterType((*UpdateTaskResponse)(nil), "funnel.UpdateTaskResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TaskStateService service

type TaskStateServiceClient interface {
	UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error)
}

type taskStateServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskStateServiceClient(cc *grpc.ClientConn) TaskStateServiceClient {
	return &taskStateServiceClient{cc}
}

func (c *taskStateServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error) {
	out := new(UpdateTaskResponse)
	err := grpc.Invoke(ctx, "/funnel.TaskStateService/UpdateTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TaskStateService service

type TaskStateServiceServer interface {
	UpdateTask(context.Context, *UpdateTaskRequest) (*UpdateTaskResponse, error)
}

func RegisterTaskStateServiceServer(s *grpc.Server, srv TaskStateServiceServer) {
	s.RegisterService(&_TaskStateService_serviceDesc, srv)
}

func _TaskStateService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskStateServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/funnel.TaskStateService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskStateServiceServer).UpdateTask(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskStateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "funnel.TaskStateService",
	HandlerType: (*TaskStateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateTask",
			Handler:    _TaskStateService_UpdateTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task_state.proto",
}

func init() { proto.RegisterFile("task_state.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4d, 0x4b, 0xc3, 0x30,
	0x18, 0xc7, 0x49, 0x87, 0x7b, 0x79, 0x36, 0x4b, 0x7d, 0xf0, 0x50, 0x7b, 0x0a, 0x03, 0xb1, 0xa7,
	0x1e, 0xba, 0x8f, 0x20, 0x1e, 0x04, 0x4f, 0x99, 0xe2, 0x71, 0xd4, 0xf5, 0x71, 0x84, 0x8d, 0xa4,
	0x36, 0x4f, 0x65, 0x9f, 0xd1, 0x4f, 0x25, 0x49, 0xd4, 0x09, 0x7a, 0xcb, 0xff, 0x85, 0x5f, 0x92,
	0x3f, 0x64, 0xdc, 0xb8, 0xfd, 0xc6, 0x71, 0xc3, 0x54, 0x75, 0xbd, 0x65, 0x8b, 0xe3, 0xd7, 0xc1,
	0x18, 0x3a, 0x14, 0x33, 0x26, 0x17, 0xad, 0xe5, 0x87, 0x80, 0x8b, 0xa7, 0xae, 0x6d, 0x98, 0x1e,
	0x1b, 0xb7, 0x57, 0xf4, 0x36, 0x90, 0x63, 0x4c, 0x21, 0xd1, 0x6d, 0x2e, 0xa4, 0x28, 0x67, 0x2a,
	0xd1, 0x2d, 0x4a, 0x38, 0x0b, 0x9c, 0x3c, 0x91, 0xa2, 0x4c, 0x6b, 0xa8, 0x3c, 0x60, 0xed, 0x1d,
	0x15, 0x03, 0xbc, 0x81, 0x69, 0xb8, 0xee, 0x60, 0x77, 0xf9, 0x48, 0x8a, 0x72, 0x5e, 0x2f, 0x42,
	0xc9, 0x53, 0x1f, 0xec, 0x4e, 0x4d, 0x38, 0x1e, 0xf0, 0x1a, 0x52, 0x3a, 0xd2, 0x76, 0x60, 0xdb,
	0x6f, 0xb4, 0x69, 0xe9, 0x98, 0x4f, 0xa4, 0x28, 0x47, 0xea, 0xfc, 0xdb, 0xbd, 0xf7, 0x26, 0xae,
	0x60, 0xf1, 0x53, 0xf3, 0xcc, 0x69, 0x60, 0x66, 0x81, 0x79, 0xf7, 0x15, 0x78, 0xee, 0x9c, 0x4e,
	0x62, 0x79, 0x09, 0xf8, 0xfb, 0x2f, 0xae, 0xb3, 0xc6, 0x51, 0xfd, 0x0c, 0x99, 0xd7, 0xe1, 0xb9,
	0x6b, 0xea, 0xdf, 0xf5, 0x96, 0xf0, 0x16, 0xe0, 0xd4, 0xc4, 0xab, 0x2a, 0x0e, 0x53, 0xfd, 0x59,
	0xa2, 0x28, 0xfe, 0x8b, 0x22, 0xf8, 0x65, 0x1c, 0x26, 0x5c, 0x7d, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x0a, 0x88, 0x63, 0xaa, 0x69, 0x01, 0x00, 0x00,
}
